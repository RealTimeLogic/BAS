#ifndef __FileCspReader_h
#define __FileCspReader_h 

#include <CspRunTm.h>
#include <BaFile.h>

/*! \page FileCspReaderIntro CspReader example code.
  The FileCspReader, which inherits from CspReader,
  shows you how to write CspReader driver object class.
 */

/** Example code that shows you how to write a CspReader driver object.
    @ingroup CSP
 The Web-Server uses the CspReader driver object when requesting data from 
 the "dat" file generated by
 <a href="../../CspTools.html#CspLink">CspLink</a>.

 This example code uses the file system for reading the "dat" file.
 The constructor opens the "dat" file and method "diskRead" uses the
 Posix function fseek for setting the file pointer to the requested offset
 position and function fread for reading the actual data.
 */
typedef struct FileCspReader
#ifdef __cplusplus
: public CspReader
{
    /** The FileCspReader constructor opens the "dat" file for reading.
        You must call CspReader::isValid, which informs you if the constructor
        successfully opened the "data" file for reading.
         \param pathName is the path and name to the "data" file.
       */
      FileCspReader(const char* pathName);
#else
{
      CspReader data;
#endif
      U32 currentOffset;
      ResIntfPtr fp;
} FileCspReader;

#ifdef __cplusplus
extern "C" {
#endif

void
FileCspReader_constructor(FileCspReader* o, const char* pathName);
#ifdef __cplusplus
}

inline FileCspReader::FileCspReader(const char* pathName) {
   FileCspReader_constructor(this, pathName); }
#endif


#endif
